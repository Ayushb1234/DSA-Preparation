class Solution {
public:

    int solve(vector<int>& cost,int i,vector<int>& dp){

        if(i < 0) return 0;
        if(i == 0) return cost[0];
        if(i == 1) return cost[1];

        if(dp[i]!=-1) return dp[i];

        int one = solve(cost,i-1,dp)+cost[i];
        int two = solve(cost,i-2,dp)+cost[i];

        dp[i] = min(one,two);

        return dp[i];
    }
    
    int minCostClimbingStairs(vector<int>& cost) {

        int n = cost.size();

        vector<int> dp(n,-1);

        int ans = min(solve(cost,n-1,dp),solve(cost,n-2,dp));

        return ans;
        
    }
};
