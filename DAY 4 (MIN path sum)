class Solution {
public:
    int m,n;
    vector<vector<int>> dp;

    int solve(vector<vector<int>>& grid,int i,int j){

        if(i==m-1 && j==n-1) return grid[i][j];

        if(i>=m || j>=n) return 1e9;

        if (dp[i][j] != -1) return dp[i][j];


        int down = solve(grid,i+1,j);
        int right = solve(grid,i,j+1);

        return dp[i][j] = grid[i][j] + min(down,right);

        
    }
    
    int minPathSum(vector<vector<int>>& grid) {

         m = grid.size();
         n = grid[0].size();

         dp.assign(m, vector<int>(n, -1));
        return solve(grid, 0, 0);

        
    }
};
