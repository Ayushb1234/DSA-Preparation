class Solution {
public:

bool isPalindrome(string& s,int i, int j,vector<vector<int>>& dp) {
        if (i >= j) return true; // single char or empty substring
        if (dp[i][j] != -1) return dp[i][j];

        if (s[i] == s[j]) {
            return dp[i][j] = isPalindrome(s,i+1, j-1,dp);
        }
        return dp[i][j] = false;
    }

    int countSubstrings(string s) {

        // count no of palindromic substrings

        int n = s.length();
        
        // generate substrings

        //  isplaindrome or not

        vector<vector<int>> dp(n,vector<int>(n,-1));

        int count = 0;

        for(int i=0;i<n;i++){
            for(int j=i;j<n;j++){
                if(isPalindrome(s,i,j,dp)){
                    count++;
                }
            }
        }

        return count;




        
    }
};
